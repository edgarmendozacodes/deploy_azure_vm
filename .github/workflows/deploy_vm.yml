name: Deploy VM to Azure

on:
  push:
    branches:
      - main

jobs:
  deploy-vm:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Login to Azure using credentials stored in GitHub Secrets
    - name: Login to Azure using credentials
      uses: azure/login@v1.5.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Create the resource group if it doesn't exist
    - name: Create resource group if it doesn't exist
      run: |
        if ! az group show --name jenkinsRG > /dev/null 2>&1; then
          az group create --name jenkinsRG --location eastus
        else
          echo "Resource group jenkinsRG already exists. Skipping creation."
        fi

    # Step 4: Create the Network Security Group (NSG) if it doesn't exist
    - name: Create Network Security Group (NSG) if it doesn't exist
      run: |
        if ! az network nsg show --resource-group jenkinsRG --name jenkinsNSG > /dev/null 2>&1; then
          az network nsg create --resource-group jenkinsRG --name jenkinsNSG
        else
          echo "Network Security Group jenkinsNSG already exists. Skipping creation."
        fi

    # Step 5: Create NSG rules to allow Jenkins (port 8080) and SSH (port 22) traffic
    - name: Create NSG rule to allow Jenkins (port 8080) and SSH (port 22) traffic
      run: |
        az network nsg rule create \
          --resource-group jenkinsRG \
          --nsg-name jenkinsNSG \
          --name AllowJenkins \
          --protocol tcp \
          --priority 1000 \
          --destination-port-ranges 8080 \
          --access allow \
          --direction inbound \
          --source-address-prefixes '*' \
          --destination-address-prefixes '*' \
          --description "Allow inbound traffic on port 8080 for Jenkins"

        az network nsg rule create \
          --resource-group jenkinsRG \
          --nsg-name jenkinsNSG \
          --name AllowSSH \
          --protocol tcp \
          --priority 1001 \
          --destination-port-ranges 22 \
          --access allow \
          --direction inbound \
          --source-address-prefixes '*' \
          --destination-address-prefixes '*' \
          --description "Allow inbound traffic on port 22 for SSH"

# Step 6: Create virtual network and subnet if they don't exist
      - name: Create virtual network and subnet if they don't exist
        run: |
          if ! az network vnet show --resource-group jenkinsRG --name jenkinsVNet > /dev/null 2>&1; then
            az network vnet create \
              --resource-group jenkinsRG \
              --name jenkinsVNet \
              --address-prefix 10.0.0.0/16 \
              --subnet-name jenkinsSubnet \
              --subnet-prefix 10.0.1.0/24
          else
            echo "Virtual Network jenkinsVNet already exists. Skipping creation."
          fi

# Step 7: Create public IP if it doesn't exist
- name: Create public IP if it doesn't exist
  run: |
    if ! az network public-ip show --resource-group jenkinsRG --name jenkinsPublicIP > /dev/null 2>&1; then
      az network public-ip create \
        --resource-group jenkinsRG \
        --name jenkinsPublicIP
    else
      echo "Public IP jenkinsPublicIP already exists. Skipping creation."
    fi

# Step 8: Create network interface if it doesn't exist
- name: Create network interface if it doesn't exist
  run: |
    if ! az network nic show --resource-group jenkinsRG --name jenkinsNIC > /dev/null 2>&1; then
      az network nic create \
        --resource-group jenkinsRG \
        --vnet-name jenkinsVNet \
        --subnet jenkinsSubnet \
        --name jenkinsNIC \
        --public-ip-address jenkinsPublicIP \
        --network-security-group jenkinsNSG
    else
      echo "Network interface jenkinsNIC already exists. Skipping creation."
    fi
